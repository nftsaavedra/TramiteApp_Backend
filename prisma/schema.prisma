
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// -------------------
// Modelos de Autenticación y Usuarios
// -------------------

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  role      Role     @default(RECEPCIONISTA)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relaciones
  oficina   Oficina?     @relation(fields: [oficinaId], references: [id])
  oficinaId String? // Todos los usuarios pertenecerán a una oficina de VPIN

  movimientosCreados Movimiento[]
  tramitesAsignados  Tramite[]     @relation("TramitesAsignados")
  anotacionesCreadas Anotacion[]
  
  @@map("users")
}

enum Role {
  RECEPCIONISTA
  ANALISTA
  ASESORIA
  ADMIN
}

// -------------------
// Modelos de Catálogo y Parametrización
// -------------------

model Oficina {
  id        String   @id @default(cuid())
  nombre    String   @unique
  siglas    String   @unique
  tipo      String 
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // --- MEJORA: Relación para la jerarquía de oficinas ---
  parentId  String?
  parent    Oficina?  @relation("JerarquiaOficinas", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  children  Oficina[] @relation("JerarquiaOficinas")
  // ----------------------------------------------------

  // Relaciones
  usuarios             User[]
  tramitesOriginados   Tramite[]
  movimientosOrigen    Movimiento[]
  movimientosDestino   MovimientoDestino[]
  correlativos         DocumentoCorrelativo[]

  @@map("oficinas")
}

model TipoDocumento {
  id            String   @id @default(cuid())
  nombre        String   @unique
  descripcion   String?
  plantilla     String?
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relaciones
  tramites      Tramite[]
  movimientos   Movimiento[] // Relación para los documentos de movimiento
  correlativos  DocumentoCorrelativo[]

  @@map("tipos_documento")
}

model DocumentoCorrelativo {
  id              String   @id @default(cuid())
  anio            Int
  correlativo     Int      @default(0)
  
  oficina         Oficina       @relation(fields: [oficinaId], references: [id])
  oficinaId       String

  tipoDocumento   TipoDocumento @relation(fields: [tipoDocumentoId], references: [id])
  tipoDocumentoId String
  
  updatedAt       DateTime @updatedAt

  @@unique([anio, oficinaId, tipoDocumentoId])
  @@map("documento_correlativos")
}


// -------------------
// Modelos del Core de Trámites
// -------------------

model Tramite {
  id                      String   @id @default(cuid())
  numeroDocumentoCompleto String
  correlativo             Int
  anio                    Int
  asunto                  String
  notas                   String?
  observaciones           String?
  estado                  EstadoTramite @default(ABIERTO)
  prioridad               PrioridadTramite @default(NORMAL)
  fechaDocumento          DateTime
  fechaIngreso            DateTime @default(now())
  fechaCierre             DateTime?
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt

  // Relaciones
  tipoDocumento           TipoDocumento @relation(fields: [tipoDocumentoId], references: [id])
  tipoDocumentoId         String

  oficinaRemitente        Oficina       @relation(fields: [oficinaRemitenteId], references: [id])
  oficinaRemitenteId      String

  usuarioAsignado         User?         @relation("TramitesAsignados", fields: [usuarioAsignadoId], references: [id])
  usuarioAsignadoId       String?

  movimientos             Movimiento[]
  anotaciones             Anotacion[]

  @@map("tramites")
}

enum EstadoTramite {
  ABIERTO
  CERRADO
  ARCHIVADO
}

enum PrioridadTramite {
  BAJA
  NORMAL
  ALTA
  URGENTE
}


model Movimiento {
  id                String   @id @default(cuid())
  tipoAccion        TipoAccion

  // Campos para el documento específico del movimiento
  numeroDocumentoCompleto String?
  correlativo             Int?
  anio                    Int?
  fechaDocumento          DateTime?
  tipoDocumento           TipoDocumento? @relation(fields: [tipoDocumentoId], references: [id])
  tipoDocumentoId         String?

  notas             String?
  observaciones     String?
  fechaCierre       DateTime?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // Relaciones
  tramite           Tramite  @relation(fields: [tramiteId], references: [id])
  tramiteId         String

  usuarioCreador    User     @relation(fields: [usuarioCreadorId], references: [id])
  usuarioCreadorId  String

  oficinaOrigen     Oficina  @relation(fields: [oficinaOrigenId], references: [id])
  oficinaOrigenId   String

  destinos          MovimientoDestino[]

  @@map("movimientos")
}

enum TipoAccion {
  DERIVACION
  RESPUESTA
  ASIGNACION
  ARCHIVO
  CIERRE
}

model MovimientoDestino {
  id              String   @id @default(cuid())
  tipoDestino     TipoDestino @default(PRINCIPAL)
  fechaRecepcion  DateTime?
  estado          EstadoDestino @default(PENDIENTE)
  
  // Relaciones
  movimiento      Movimiento @relation(fields: [movimientoId], references: [id])
  movimientoId    String

  oficinaDestino  Oficina    @relation(fields: [oficinaDestinoId], references: [id])
  oficinaDestinoId String

  @@map("movimiento_destinos")
}

enum TipoDestino {
  PRINCIPAL
  COPIA
}

enum EstadoDestino {
  PENDIENTE
  RECIBIDO
  ATENDIDO
}

model Anotacion {
  id        String   @id @default(cuid())
  contenido String
  createdAt DateTime @default(now())

  // Relaciones
  tramite   Tramite  @relation(fields: [tramiteId], references: [id])
  tramiteId String

  autor     User     @relation(fields: [autorId], references: [id])
  autorId   String

  @@map("anotaciones")
}


// -------------------
// Modelos de Soporte (Trazabilidad)
// -------------------

model Feriado {
  id          String   @id @default(cuid())
  fecha       DateTime @unique @db.Date
  descripcion String
  
  @@map("feriados")
}